manager_db:
  image: cloudopting/manager-db
  #build: ./database
  restart: always
  hostname: db
  container_name: co_manager_db
  environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=1qaz2wsx
  # Expose ports only for debug
  #ports:
  #  - "5432:5432"

manager_jcr:
  image: cloudopting/manager-jcr
  #build: ./jackrabbit
  restart: always
  hostname: jcr
  container_name: co_manager_jcr
  #environment:
  ports:
    - "8082:8080"

manager:
  image: cloudopting/manager:2.0.0
  #build: ./manager
  restart: always
  hostname: manager
  container_name: co_manager
  links:
    - manager_db:db
    - manager_jcr:jcr
    - commander:crane
  environment:
    - JAVA_OPTS=-Dspring.profiles.active=docker
  ports:
    - "8080:8080"

commander:
  image: cloudopting/cranecommander
  restart: always
  hostname: cocommander
  container_name: co_commander
  environment:
    - DEBUG=true
    - REDIS=true
  ports:
    - "8888:8888"
  volumes:
    - ./certs/commander:/var/lib/commander/certs
    - ./commander/commander-data-tests/r10k/git:/root/.r10k/git
    - ./commander/commander-data-tests/var/crane:/var/crane/
    # Override application copied with the actual folder mounted as volume.
    # Allows real time changes and log monitoring from editor
  #  - ./commander/app:/usr/src/commander
  links:
    - redis
    - registry:coregistry
    - engine:coengine
#    - emulatedhost
# Uncomment this to run manually
#   command: tail -f /dev/null
  log_driver: "fluentd"
  log_opt:
    fluentd-address: "172.17.0.2:24225"
    fluentd-tag: "cranecommander.{{.Name}}.{{.ID}}"

registry:
  image: registry:2
  restart: always
  container_name: co_registry
  ports:
    - 5000:5000
  volumes:
    - ./registry/registry-data-tests:/var/lib/registry
    - ./certs/registry:/certs
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
    REGISTRY_HTTP_TLS_KEY: /certs/domain.key
    REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
# Disabled registry authentication
#    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
#    REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
  log_driver: "fluentd"
  log_opt:
   fluentd-address: "172.17.0.2:24225"
   fluentd-tag: "craneregistry.{{.Name}}.{{.ID}}"

engine:
  image: cloudopting/craneengine
  privileged: true
  restart: always
  volumes:
    - /var/lib/docker
    - ./certs/engine:/var/lib/coengine/certs
  hostname: coengine
  environment:
    - DOCKER_DAEMON_ARGS=--tlsverify --tlscacert=/var/lib/coengine/certs/ca.pem --tlscert=/var/lib/coengine/certs/server-cert.pem --tlskey=/var/lib/coengine/certs/server-key.pem
    - PORT=4243
  container_name: co_engine
  links:
    - registry:coregistry
  log_driver: "fluentd"
  log_opt:
    fluentd-address: "172.17.0.2:24225"
    fluentd-tag: "craneengine.{{.Name}}.{{.ID}}"

redis:
  image: redis:3
  restart: always
  container_name: co_redis
  ports:
    - 6379:6379
  log_driver: "fluentd"
  log_opt:
    fluentd-address: "172.17.0.2:24225"
    fluentd-tag: "craneredis.{{.Name}}.{{.ID}}"

#emulatedhost:
#  image: cloudopting/craneemulatedhost
#  privileged: true
#  restart: always
#  volumes:
#    - /var/lib/docker
#    - ./certs/emulatedhost:/var/lib/emulatedhost/certs
#  hostname: coengine
#  environment:
#    - DOCKER_DAEMON_ARGS=--tlsverify --tlscacert=/var/lib/emulatedhost/certs/ca.pem --tlscert=/var/lib/emulatedhost/certs/emulatedhost-cert.pem --tlskey=/var/lib/emulatedhost/certs/emulatedhost-key.pem
#    - PORT=4243
#  container_name: co_emulatedhost
#  links:
#    - registry:coregistry
## Uncomment this to run manually
##  command: tail -f /dev/null
#  log_driver: "fluentd"
#  log_opt:
#    fluentd-address: "172.17.0.2:24225"
#    fluentd-tag: "craneemulatedhost.{{.Name}}.{{.ID}}"
